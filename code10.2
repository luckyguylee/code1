#!usr/bin/env python

import os,socket,errno,types,tempfile

class NetworkError(IOError):
	pass
	
def updArgs(args,newarg=None):
	if isinstance(args,IOError):
		myags=[]
		myags.extend([arg for arg in args])
	else:
		myags=list(args)
		
	if newarg:
		myags.append(newarg)
		
def fileArgs(file,mode,args):
	if args[0]==error.EACCES and \
			'access' in dir(os):
		perms=''
		permd={'r':os.R_OK,'w':os.W_OK,
			'x':os.X_OK}
		pkeys=permd.key()
		pkey.sort()
		pkey.reverse()
		
		for eachPerm in 'rwx':
			if os.access(file,permd[eachPerm]):
				perms+=eachPerm
			else:
				perms+='_'
				
		if isinstance(args,IOError):
			myags=[]
			myags.extend([arg for arg in args])
		else:
			myags=list(args)
			
		myags[1]="'%s'%s (perms:'%s')"%\
			(mode,myags[1],perms)
			
		myags.append(args.filename)
		
		else:
			myags=args
			
		return tuple(myargs)
def myopen(file,mode='r'):
	try:
		fo=open(file,mode)
	except IOError,args:
		raise FileError,fileArgs(file,mode,args)
		
	return fo

def testfile():
	
	file=mktemp()
	f=open(file,'w')
	f.close()
		
	for eachTest in ((0,'r'),(0100,'r'),
			(0400,'w'),(0500,'w')):
		try:
			os.chmod(file,eachTest[0])
			f=myopen(file,eachTest[1])
			
		except 	FileError,args:
			print "%s:%s"%\
				(args._class_,_name_args)
	else:
			print file, "opened ok***perm ignored"
			f.close()
		
		os.chmod(file,0277)
		os.unlik(file)
def testnet():
	s=socket.socket(socket.AF_INET,socket.SOCK_STREAM)
	
	for eachHost in ('deli','www'):
		try:
			myconnet(s,'deli',8080)
		except	NetworkError,args:
			print "%s:%s"%\
				(args._class_._name_,args)
if _name_=='_main_':
		testfile()
		testnet()
